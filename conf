#!/usr/bin/guile \
-l gash-base-lib -e main -s
!#

(use-modules (ice-9 format)
	     (ice-9 popen)
	     (ice-9 rdelim)
	     (ice-9 textual-ports)
	     (ice-9 session)
	     (ice-9 regex)
	     (ice-9 buffered-input))

(define cc "gcc")
(define cflags "`pkg-config --cflags readline guile-2.2`")
(define execdir "/usr/local/bin")
(define libsdir "/usr/local/lib")
(define single-file-name "gash-local")
(define local? #t)
(define executable-name "gash")

(define (build-libgash.so)
  (echo "Compiling libgash.so")
  (system-fmt
   "~a ~a -shared -o libgash.so -fPIC libgash.c -l readline" cc cflags)
  (echo "libgash.so compiled"))

(let ((extension-path (format #f "~a/libgash.so" (getcwd)))
      (init-function "init_gash_c"))
  (catch #t
    (lambda () (load-extension extension-path init-function))
    (lambda (key . args)
      (display "key: ") (display key) (newline)
      (build-libgash.so)
      (load-extension extension-path init-function))))

;; (define (build-gash-base-lib))


(define (gash-load-dynamic-code-installed)
  (let* ((1l "#!/usr/bin/guile \\")
	 (2l (format #f "-l ~a/gash-base-lib -e main -s" libsdir))
	 (3l "!#")
	 (n (list->string '(#\newline)))
	 (shebang (string-append 1l n 2l n 3l n n)))
    (let ((code-to-load-libgash.so
	   (format #f "(let ((extension-path \"~a/libgash.so\")
      (init-function \"init_gash_c\"))
  (load-extension extension-path init-function))"
		   libsdir)))
      (string-append shebang code-to-load-libgash.so n n
		     "(define header-loads-libgash #t)" n n
		     ";;; the above was generated by configure, please inspect!"
		     n))))

(define (gash-load-dynamic-code-local)
  (let* ((1st-line "#!/usr/bin/guile \\")
	 (2nd-line (format #f "-l ~a/gash-base-lib -e main -s" (getcwd)))
	 (3rd-line "!#")
	 (n (list->string '(#\newline)))
	 (shebang (string-append 1st-line n 2nd-line n 3rd-line n n)))
    (let ((code-to-load-libgash.so
	   (format #f "(let ((extension-path \"~a/libgash.so\")
      (init-function \"init_gash_c\"))
  (load-extension extension-path init-function))"
		   (getcwd))))
      (string-append shebang code-to-load-libgash.so n n
		     "(define header-loads-libgash #t)" n n 
		     ";;; the above was generated by configure, please inspect!"
		     n))))

(define (gash-and-history-as-string)
  (define (trash-x-lines-from-port x port)
    (for v from 1 to x
	 (read-line port)))
  (let ((gash-port (open-file "gash-code.scm" "r"))
	;; (gash-base-lib-port (open-file "gash-base-lib" "r"))
	(history-port (open-file "history.scm" "r")))
    (trash-x-lines-from-port 3 gash-port)
    (let ((gash-text (get-string-all gash-port))
	  ;; (gash-base-lib-text (get-string-all gash-base-lib-port))
	  (history-text (get-string-all history-port)))
      (string-append gash-text history-text))))

(define (assemble-gash)
  "put together a single gash file to install, and set it to be executable"
  (echo
   "Assembling history and gash propper into single file with propper headers")
  (let ((header (if local?
		    (gash-load-dynamic-code-local)
		    (gash-load-dynamic-code-installed)))
	(port (open-file single-file-name "w"))
	(code (gash-and-history-as-string)))
    (echo "writing to single-file")
    (display (string-append header code) port)
    (close-port port)
    (system-fmt "chmod +x ~a" single-file-name)))

(define (copy-install-gash-execdir)
  (if local? ; if local?, then dont install libraries.
      (begin
	(system-fmt "sudo cp ~a ~a/~a" single-file-name execdir executable-name)
	(echo-fmt "installed ~a to ~a/~a"
		  single-file-name execdir executable-name))
      (begin (system-fmt "sudo cp libgash.so ~a/libgash.so" libsdir)
	     (system-fmt "sudo cp gash-base-lib ~a/gash-base-lib" libsdir)
	     (system-fmt "sudo cp ~a ~a/~a"
			 single-file-name execdir executable-name)
	     (echo-fmt "installed ~a to ~a/~a" "libgash.so" libsdir "libgash.so")
	     (echo-fmt "installed ~a to ~a/~a"
		       "gash-base-lib" libsdir "gash-base-lib")
	     (echo-fmt "installed ~a to ~a/~a"
		       single-file-name execdir executable-name)
	     )))

(define (copy-install-gash-curdir)
  "this function installs gash to the current directory."
  (system-fmt "sudo cp ~a ~a/~a" single-file-name (getcwd) executable-name))

(define (main . args)
  (for-cmd-line
   ((--set-libsdir)
    (set! libsdir (shift)))
   ((--set-execdir)
    (set! execdir (shift)))
   ((--set-single-file-name)
    (set! single-file-name (shift)))
   ((--set-install-name)
    (set! executable-name (shift)))
   ((--local)
    ;; set local? to #t or #f based on --local flag
    (let ((x (shift)))
      (cond ((or (string=? x "f") (string=? x "no") (string=? x "n"))
	     (set! local? #f))
	    ((or (string=? x "t") (string=? x "yes") (string=? x "y"))
	     (set! local? #t)))))
   ((--generate)
    (build-libgash.so)
    (assemble-gash))
   ((--install)
    (build-libgash.so)
    (assemble-gash)
    (copy-install-gash-execdir)
    (system-fmt "rm ~a" single-file-name))
   ((-qi))
   ;; (())
   )
  (display "build with local in mind?: ")
  (echo local?))
